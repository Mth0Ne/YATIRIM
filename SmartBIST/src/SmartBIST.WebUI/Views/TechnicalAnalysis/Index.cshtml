@model SmartBIST.WebUI.Models.TechnicalAnalysisViewModel
@{
    ViewData["Title"] = "Teknik Analiz - Gerçek Veriler";
}

@functions {
    private string GetSignalText(string signal)
    {
        return signal switch
        {
            "BUY" => "Al",
            "SELL" => "Sat", 
            "NEUTRAL" => "Nötr",
            _ => "-"
        };
    }

    private string GetSignalClass(string signal)
    {
        return signal switch
        {
            "BUY" => "bg-success",
            "SELL" => "bg-danger",
            "NEUTRAL" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    private string GetIndicatorName(string indicator)
    {
        return indicator switch
        {
            "sma" => "SMA",
            "ema" => "EMA",
            "rsi" => "RSI",
            "macd" => "MACD",
            "bollinger" => "Bollinger",
            "stochastic" => "Stochastic",
            "williams_r" => "Williams %R",
            _ => indicator.ToUpper()
        };
    }
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title mb-0">
                        <i class="bi bi-graph-up me-2"></i>Teknik Analiz - Gerçek Veriler
                    </h3>
                </div>
                <div class="card-body">
                    <!-- Stock Selection Form -->
                    <form method="get" asp-action="Index">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label for="symbol" class="form-label">Hisse Seçin</label>
                                <div class="input-group">
                                    <select class="form-select" id="symbol" name="symbol" required>
                                        <option value="">Hisse senedi seçin</option>
                                        @foreach (var stock in Model.AvailableStocks)
                                        {
                                            <option value="@stock.Value" selected="@(stock.Value == Model.Symbol)">@stock.Text</option>
                                        }
                                    </select>
                                    <button class="btn btn-primary" type="submit">
                                        <i class="bi bi-analytics me-1"></i>Analiz Et
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label for="period" class="form-label">Periyot</label>
                                <select class="form-select" id="period" name="period">
                                    <option value="30" selected="@(Model.Period == 30)">Son 30 Gün</option>
                                    <option value="60" selected="@(Model.Period == 60)">Son 60 Gün</option>
                                    <option value="90" selected="@(Model.Period == 90)">Son 90 Gün</option>
                                    <option value="180" selected="@(Model.Period == 180)">Son 180 Gün</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <div class="d-flex align-items-end h-100">
                                    <button class="btn btn-success w-100" type="submit">
                                        <i class="bi bi-arrow-clockwise me-1"></i>Yenile
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>

                    <!-- Technical Signals Dashboard -->
                    @if (Model.HasData)
                    {
                        <div class="mb-4">
                            <!-- Individual Signals Cards -->
                            <div class="row g-3">
                                @foreach (var signal in Model.TechnicalAnalysis.Signals.IndividualSignals)
                                {
                                    <div class="col-md-3 col-sm-6">
                                        <div class="card border-0 shadow-sm h-100">
                                            <div class="card-body text-center">
                                                <div class="mb-2">
                                                    <div class="bg-light rounded-circle p-2 d-inline-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                        <i class="bi bi-@(signal.Key == "rsi" ? "speedometer2" : signal.Key == "macd" ? "bar-chart" : signal.Key == "bollinger" ? "arrows-expand" : signal.Key == "sma" ? "graph-up" : signal.Key == "ema" ? "graph-up-arrow" : signal.Key == "stochastic" ? "graph-down" : "percent") text-secondary"></i>
                                                    </div>
                                                </div>
                                                <h6 class="card-title mb-2">@GetIndicatorName(signal.Key)</h6>
                                                <span class="badge @GetSignalClass(signal.Value) fs-6">
                                                    <i class="bi bi-@(signal.Value == "BUY" ? "arrow-up" : signal.Value == "SELL" ? "arrow-down" : "dash") me-1"></i>
                                                    @GetSignalText(signal.Value)
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Advanced Technical Signals Dashboard -->
                            <div class="card border-0 shadow-sm mt-4">
                                <div class="card-header bg-gradient-primary text-white">
                                    <div class="row align-items-center">
                                        <div class="col">
                                            <h5 class="card-title mb-0">
                                                <i class="bi bi-lightning-charge me-2"></i>Detaylı Teknik Analiz Sinyalleri
                                            </h5>
                                            <small class="opacity-75">Profesyonel teknik analiz özeti</small>
                                        </div>
                                        <div class="col-auto">
                                            <div class="badge bg-white text-primary fs-6 px-3 py-2">
                                                <i class="bi bi-graph-up me-1"></i>
                                                Gerçek Zamanlı
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body p-4">
                                    <!-- Signal Strength Meter -->
                                    <div class="row mb-4">
                                        <div class="col-md-6">
                                            <div class="d-flex align-items-center">
                                                <div class="me-3">
                                                    <div class="signal-meter-container position-relative" style="width: 80px; height: 80px;">
                                                        <svg class="signal-meter" width="80" height="80">
                                                            <circle cx="40" cy="40" r="35" fill="none" stroke="#e9ecef" stroke-width="8"></circle>
                                                            <circle cx="40" cy="40" r="35" fill="none" 
                                                                    stroke="@(Model.TechnicalAnalysis.Signals.OverallSignal == "BUY" ? "#198754" : Model.TechnicalAnalysis.Signals.OverallSignal == "SELL" ? "#dc3545" : "#ffc107")" 
                                                                    stroke-width="8" 
                                                                    stroke-dasharray="220" 
                                                                    stroke-dashoffset="@(220 - (Model.TechnicalAnalysis.Signals.SignalStrength * 220))"
                                                                    transform="rotate(-90 40 40)"
                                                                    class="signal-progress"></circle>
                                                        </svg>
                                                        <div class="position-absolute top-50 start-50 translate-middle text-center">
                                                            <div class="fs-5 fw-bold text-@(Model.TechnicalAnalysis.Signals.OverallSignal == "BUY" ? "success" : Model.TechnicalAnalysis.Signals.OverallSignal == "SELL" ? "danger" : "warning")">
                                                                @((Model.TechnicalAnalysis.Signals.SignalStrength * 100).ToString("F0"))%
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div>
                                                    <h4 class="mb-1">Sinyal Gücü</h4>
                                                    <p class="text-muted mb-2">Genel trend analizi</p>
                                                    <span class="badge @GetSignalClass(Model.TechnicalAnalysis.Signals.OverallSignal) fs-6 px-3 py-2">
                                                        <i class="bi bi-@(Model.TechnicalAnalysis.Signals.OverallSignal == "BUY" ? "arrow-up" : Model.TechnicalAnalysis.Signals.OverallSignal == "SELL" ? "arrow-down" : "dash") me-1"></i>
                                                        @GetSignalText(Model.TechnicalAnalysis.Signals.OverallSignal)
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="row text-center">
                                                <div class="col-4">
                                                    <div class="border-end pe-3">
                                                        <div class="signal-stat">
                                                            <div class="signal-stat-icon bg-success bg-opacity-10 text-success rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 50px; height: 50px;">
                                                                <i class="bi bi-arrow-up fs-5"></i>
                                                            </div>
                                                            <h3 class="text-success mb-0">@Model.TechnicalAnalysis.Signals.BuySignals</h3>
                                                            <small class="text-muted">Alış Sinyali</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="border-end pe-3">
                                                        <div class="signal-stat">
                                                            <div class="signal-stat-icon bg-warning bg-opacity-10 text-warning rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 50px; height: 50px;">
                                                                <i class="bi bi-dash fs-5"></i>
                                                            </div>
                                                            <h3 class="text-warning mb-0">@Model.TechnicalAnalysis.Signals.NeutralSignals</h3>
                                                            <small class="text-muted">Nötr</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="signal-stat">
                                                        <div class="signal-stat-icon bg-danger bg-opacity-10 text-danger rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 50px; height: 50px;">
                                                            <i class="bi bi-arrow-down fs-5"></i>
                                                        </div>
                                                        <h3 class="text-danger mb-0">@Model.TechnicalAnalysis.Signals.SellSignals</h3>
                                                        <small class="text-muted">Satış Sinyali</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Technical Indicators List -->
                                    <div class="row">
                                        <div class="col-12">
                                            <h6 class="text-muted mb-3 text-uppercase fw-semibold">
                                                <i class="bi bi-gear me-1"></i>İndikatör Detayları
                                            </h6>
                                            <div class="row g-2">
                                                @foreach (var signal in Model.TechnicalAnalysis.Signals.IndividualSignals)
                                                {
                                                    <div class="col-md-4 col-sm-6">
                                                        <div class="d-flex align-items-center justify-content-between p-3 bg-light rounded">
                                                            <div class="d-flex align-items-center">
                                                                <i class="bi bi-@(signal.Key == "rsi" ? "speedometer2" : signal.Key == "macd" ? "bar-chart" : signal.Key == "bollinger" ? "arrows-expand" : signal.Key == "sma" ? "graph-up" : signal.Key == "ema" ? "graph-up-arrow" : signal.Key == "stochastic" ? "graph-down" : "percent") text-secondary me-2"></i>
                                                                <span class="fw-medium">@GetIndicatorName(signal.Key)</span>
                                                            </div>
                                                            <span class="badge @GetSignalClass(signal.Value)">
                                                                @GetSignalText(signal.Value)
                                                            </span>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <!-- No Data State -->
                        <div class="card border-0 shadow-sm">
                            <div class="card-body text-center py-5">
                                <div class="mb-4">
                                    <i class="bi bi-lightning text-muted" style="font-size: 64px;"></i>
                                </div>
                                <h4 class="text-muted mb-3">Teknik Analiz Bekleniyor</h4>
                                <p class="text-muted mb-4">Hisse seçildiğinde detaylı teknik analiz sinyalleri burada görüntülenecek</p>
                                <div class="row justify-content-center">
                                    <div class="col-md-8">
                                        <div class="row g-3">
                                            <div class="col-4">
                                                <div class="bg-light rounded p-3">
                                                    <i class="bi bi-speedometer2 text-muted mb-2 d-block" style="font-size: 24px;"></i>
                                                    <small class="text-muted">RSI</small>
                                                </div>
                                            </div>
                                            <div class="col-4">
                                                <div class="bg-light rounded p-3">
                                                    <i class="bi bi-bar-chart text-muted mb-2 d-block" style="font-size: 24px;"></i>
                                                    <small class="text-muted">MACD</small>
                                                </div>
                                            </div>
                                            <div class="col-4">
                                                <div class="bg-light rounded p-3">
                                                    <i class="bi bi-graph-up text-muted mb-2 d-block" style="font-size: 24px;"></i>
                                                    <small class="text-muted">SMA/EMA</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <!-- Charts Section -->
                        <div class="col-md-9">
                            <!-- Price Chart -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-graph-up me-2"></i>Fiyat Grafiği
                                    </h5>
                                </div>
                                <div class="card-body">
                                    @if (Model.HasError)
                                    {
                                        <div class="alert alert-danger">
                                            <i class="bi bi-exclamation-triangle me-2"></i>@Model.ErrorMessage
                                        </div>
                                    }
                                    else if (Model.HasData)
                                    {
                                        <canvas id="priceChart" style="height: 400px;"></canvas>
                                    }
                                    else
                                    {
                                        <div class="text-center py-5 my-5 text-muted">
                                            <i class="bi bi-bar-chart-line" style="font-size: 48px;"></i>
                                            <h5 class="mt-3">Analiz için bir hisse seçin</h5>
                                            <p>Listeden bir hisse senedi seçin ve "Analiz Et" düğmesine tıklayın</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <!-- Info Panel -->
                        <div class="col-md-3">
                            <!-- Stock Info -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-info-circle me-2"></i>Hisse Bilgileri
                                    </h5>
                                </div>
                                <div class="card-body">
                                    @if (Model.HasData)
                                    {
                                        <h4>@Model.TechnicalAnalysis!.Symbol</h4>
                                        <h2 class="text-primary">@Model.Symbol</h2>
                                        <h3 class="mb-3">@Model.TechnicalAnalysis.CurrentPrice.ToString("N2") TL</h3>
                                        
                                        <div class="row g-2">
                                            <div class="col-12">
                                                <div class="border rounded p-2">
                                                    <small class="text-muted d-block">Analiz Tarihi</small>
                                                    <span class="fs-6">@Model.TechnicalAnalysis.AnalysisDate.ToString("dd.MM.yyyy HH:mm")</span>
                                                </div>
                                            </div>
                                            <div class="col-12">
                                                <div class="border rounded p-2">
                                                    <small class="text-muted d-block">Veri Noktaları</small>
                                                    <span class="fs-6">@Model.TechnicalAnalysis.DataPoints</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-4 text-muted">
                                            <i class="bi bi-info-circle" style="font-size: 36px;"></i>
                                            <p class="mt-2">Hisse seçildiğinde bilgiler burada görüntülenecek</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Debug: Model durumunu logla
        console.log('Model.HasData:', @Json.Serialize(Model.HasData));
        console.log('Model.HasError:', @Json.Serialize(Model.HasError));
        @if (Model.HasError)
        {
            <text>console.log('Error Message:', '@Html.Raw(Model.ErrorMessage)');</text>
        }
        @if (Model.TechnicalAnalysis != null)
        {
            <text>console.log('Technical Analysis:', @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TechnicalAnalysis)));</text>
        }
        @if (Model.PriceHistory != null)
        {
            <text>console.log('Price History:', @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.PriceHistory)));</text>
        }

        // Initialize chart when page loads
        $(document).ready(function() {
            console.log('Document ready!');
            @if (Model.HasData && Model.PriceHistory?.PriceHistory != null)
            {
                <text>
                console.log('Initializing chart...');
                initializePriceChart();
                </text>
            }
            else
            {
                <text>
                console.log('No data to initialize chart');
                </text>
            }
        });

        // Stock filter function
        function filterStocks() {
            const filter = document.getElementById('stockFilter').value.toUpperCase();
            const select = document.getElementById('symbol');
            const options = select.getElementsByTagName('option');
            
            for (let i = 1; i < options.length; i++) { // Start from 1 to skip the first "-- Hisse senedi seçin --" option
                const option = options[i];
                const text = option.textContent || option.innerText;
                if (text.toUpperCase().indexOf(filter) > -1) {
                    option.style.display = '';
                } else {
                    option.style.display = 'none';
                }
            }
        }

        function initializePriceChart() {
            console.log('initializePriceChart called');
            const ctx = document.getElementById('priceChart').getContext('2d');
            
            @if (Model.PriceHistory?.PriceHistory != null)
            {
                <text>
                const priceData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.PriceHistory.PriceHistory.Select(p => new { 
                    date = p.Date.ToString("yyyy-MM-dd"), 
                    close = p.Close 
                })));
                
                console.log('Price data:', priceData);
                const dates = priceData.map(d => d.date);
                const prices = priceData.map(d => d.close);
                console.log('Dates:', dates);
                console.log('Prices:', prices);
                </text>
            }
            else
            {
                <text>
                console.log('No price history data');
                const priceData = [];
                const dates = [];
                const prices = [];
                </text>
            }

            try {
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            label: 'Kapanış Fiyatı (@Model.Symbol)',
                            data: prices,
                            borderColor: 'rgb(75, 192, 192)',
                            backgroundColor: 'rgba(75, 192, 192, 0.1)',
                            tension: 0.1,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: false,
                                title: {
                                    display: true,
                                    text: 'Fiyat (TL)'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Tarih'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top'
                            }
                        }
                    }
                });
                console.log('Chart created successfully');
            } catch (error) {
                console.error('Chart creation error:', error);
            }
        }
    </script>
}

<style>
    #priceChart {
        max-height: 400px;
    }
    
    .progress {
        height: 8px;
    }
    
    #symbol option[style*="display: none"] {
        display: none !important;
    }

    /* Advanced Technical Signals Styles */
    .bg-gradient-primary {
        background: linear-gradient(135deg, #0d6efd 0%, #0a58ca 100%) !important;
    }

    .signal-meter-container {
        transition: transform 0.3s ease;
    }

    .signal-meter-container:hover {
        transform: scale(1.05);
    }

    .signal-progress {
        transition: stroke-dashoffset 0.8s ease-in-out;
        filter: drop-shadow(0 0 3px rgba(0,0,0,0.1));
    }

    .signal-stat {
        transition: transform 0.3s ease;
    }

    .signal-stat:hover {
        transform: translateY(-2px);
    }

    .signal-stat-icon {
        transition: all 0.3s ease;
    }

    .signal-stat:hover .signal-stat-icon {
        transform: scale(1.1);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .card.border-0.shadow-sm {
        transition: box-shadow 0.3s ease;
    }

    .card.border-0.shadow-sm:hover {
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15) !important;
    }

    /* Indicator Cards Enhancement */
    .bg-light.rounded {
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .bg-light.rounded:hover {
        background-color: #f8f9fa !important;
        border-color: #dee2e6;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    /* Badge Enhancements */
    .badge {
        transition: all 0.3s ease;
    }

    .badge:hover {
        transform: scale(1.05);
    }

    /* Header Gradient */
    .bg-gradient-primary::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 50%);
        pointer-events: none;
    }

    .card-header.bg-gradient-primary {
        position: relative;
        overflow: hidden;
    }

    /* Animation for signal strength display */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .signal-stat {
        animation: fadeInUp 0.6s ease forwards;
    }

    .signal-stat:nth-child(1) { animation-delay: 0.1s; }
    .signal-stat:nth-child(2) { animation-delay: 0.2s; }
    .signal-stat:nth-child(3) { animation-delay: 0.3s; }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .signal-meter-container {
            width: 60px !important;
            height: 60px !important;
        }
        
        .signal-meter {
            width: 60px !important;
            height: 60px !important;
        }

        .signal-stat-icon {
            width: 40px !important;
            height: 40px !important;
        }
    }
</style> 