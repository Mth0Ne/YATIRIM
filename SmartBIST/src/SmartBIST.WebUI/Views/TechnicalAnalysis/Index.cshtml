@model SmartBIST.WebUI.Models.TechnicalAnalysisViewModel
@{
    ViewData["Title"] = "Teknik Analiz - Gerçek Veriler";
}

@functions {
    private string GetSignalText(string signal)
    {
        return signal switch
        {
            "BUY" => "Al",
            "SELL" => "Sat", 
            "NEUTRAL" => "Nötr",
            _ => "-"
        };
    }

    private string GetSignalClass(string signal)
    {
        return signal switch
        {
            "BUY" => "bg-success",
            "SELL" => "bg-danger",
            "NEUTRAL" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    private string GetIndicatorName(string indicator)
    {
        return indicator switch
        {
            "sma" => "SMA",
            "ema" => "EMA",
            "rsi" => "RSI",
            "macd" => "MACD",
            "bollinger" => "Bollinger",
            "stochastic" => "Stochastic",
            "williams_r" => "Williams %R",
            _ => indicator.ToUpper()
        };
    }
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title mb-0">
                        <i class="bi bi-graph-up me-2"></i>Teknik Analiz - Gerçek Veriler
                    </h3>
                </div>
                <div class="card-body">
                    <!-- Stock Selection Form -->
                    <form method="get" asp-action="Index">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label for="symbol" class="form-label">Hisse Seçin</label>
                                <div class="input-group">
                                    <select class="form-select" id="symbol" name="symbol" required>
                                        <option value="">Hisse senedi seçin</option>
                                        @foreach (var stock in Model.AvailableStocks)
                                        {
                                            <option value="@stock.Value" selected="@(stock.Value == Model.Symbol)">@stock.Text</option>
                                        }
                                    </select>
                                    <button class="btn btn-primary" type="submit">
                                        <i class="bi bi-analytics me-1"></i>Analiz Et
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label for="period" class="form-label">Periyot</label>
                                <select class="form-select" id="period" name="period">
                                    <option value="30" selected="@(Model.Period == 30)">Son 30 Gün</option>
                                    <option value="60" selected="@(Model.Period == 60)">Son 60 Gün</option>
                                    <option value="90" selected="@(Model.Period == 90)">Son 90 Gün</option>
                                    <option value="180" selected="@(Model.Period == 180)">Son 180 Gün</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <div class="d-flex align-items-end h-100">
                                    <button class="btn btn-success w-100" type="submit">
                                        <i class="bi bi-arrow-clockwise me-1"></i>Yenile
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>

                    <div class="row">
                        <!-- Charts Section -->
                        <div class="col-md-9">
                            <!-- Price Chart -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-graph-up me-2"></i>Fiyat Grafiği
                                    </h5>
                                </div>
                                <div class="card-body">
                                    @if (Model.HasError)
                                    {
                                        <div class="alert alert-danger">
                                            <i class="bi bi-exclamation-triangle me-2"></i>@Model.ErrorMessage
                                        </div>
                                    }
                                    else if (Model.HasData)
                                    {
                                        <canvas id="priceChart" style="height: 400px;"></canvas>
                                    }
                                    else
                                    {
                                        <div class="text-center py-5 my-5 text-muted">
                                            <i class="bi bi-bar-chart-line" style="font-size: 48px;"></i>
                                            <h5 class="mt-3">Analiz için bir hisse seçin</h5>
                                            <p>Listeden bir hisse senedi seçin ve "Analiz Et" düğmesine tıklayın</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <!-- Info Panel -->
                        <div class="col-md-3">
                            <!-- Stock Info -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-info-circle me-2"></i>Hisse Bilgileri
                                    </h5>
                                </div>
                                <div class="card-body">
                                    @if (Model.HasData)
                                    {
                                        <h4>@Model.TechnicalAnalysis!.Symbol</h4>
                                        <h2 class="text-primary">@Model.Symbol</h2>
                                        <h3 class="mb-3">@Model.TechnicalAnalysis.CurrentPrice.ToString("N2") TL</h3>
                                        
                                        <div class="row g-2">
                                            <div class="col-12">
                                                <div class="border rounded p-2">
                                                    <small class="text-muted d-block">Analiz Tarihi</small>
                                                    <span class="fs-6">@Model.TechnicalAnalysis.AnalysisDate.ToString("dd.MM.yyyy HH:mm")</span>
                                                </div>
                                            </div>
                                            <div class="col-12">
                                                <div class="border rounded p-2">
                                                    <small class="text-muted d-block">Veri Noktaları</small>
                                                    <span class="fs-6">@Model.TechnicalAnalysis.DataPoints</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-4 text-muted">
                                            <i class="bi bi-info-circle" style="font-size: 36px;"></i>
                                            <p class="mt-2">Hisse seçildiğinde bilgiler burada görüntülenecek</p>
                                        </div>
                                    }
                                </div>
                            </div>
                            
                            <!-- Technical Signals -->
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-lightning me-2"></i>Teknik Sinyaller
                                    </h5>
                                </div>
                                <div class="card-body">
                                    @if (Model.HasData)
                                    {
                                        <div class="mb-3">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span>Genel Sinyal</span>
                                                <span class="badge @GetSignalClass(Model.TechnicalAnalysis!.Signals.OverallSignal)">
                                                    @GetSignalText(Model.TechnicalAnalysis.Signals.OverallSignal)
                                                </span>
                                            </div>
                                            <div class="progress">
                                                <div class="progress-bar @GetSignalClass(Model.TechnicalAnalysis.Signals.OverallSignal)" 
                                                     role="progressbar" style="width: @((Model.TechnicalAnalysis.Signals.SignalStrength * 100).ToString("F0"))%">
                                                </div>
                                            </div>
                                            <small class="text-muted">Sinyal Gücü: @((Model.TechnicalAnalysis.Signals.SignalStrength * 100).ToString("F0"))%</small>
                                        </div>
                                        
                                        <ul class="list-group list-group-flush">
                                            @foreach (var signal in Model.TechnicalAnalysis.Signals.IndividualSignals)
                                            {
                                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                                    @GetIndicatorName(signal.Key)
                                                    <span class="badge @GetSignalClass(signal.Value)">@GetSignalText(signal.Value)</span>
                                                </li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <div class="text-center py-4 text-muted">
                                            <i class="bi bi-lightning" style="font-size: 36px;"></i>
                                            <p class="mt-2">Hisse seçildiğinde teknik analiz sinyalleri burada görüntülenecek</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize chart when page loads
        $(document).ready(function() {
            @if (Model.HasData && Model.PriceHistory?.PriceHistory != null)
            {
                <text>
                initializePriceChart();
                </text>
            }
        });

        // Stock filter function
        function filterStocks() {
            const filter = document.getElementById('stockFilter').value.toUpperCase();
            const select = document.getElementById('symbol');
            const options = select.getElementsByTagName('option');
            
            for (let i = 1; i < options.length; i++) { // Start from 1 to skip the first "-- Hisse senedi seçin --" option
                const option = options[i];
                const text = option.textContent || option.innerText;
                if (text.toUpperCase().indexOf(filter) > -1) {
                    option.style.display = '';
                } else {
                    option.style.display = 'none';
                }
            }
        }

        function initializePriceChart() {
            const ctx = document.getElementById('priceChart').getContext('2d');
            
            @if (Model.PriceHistory?.PriceHistory != null)
            {
                <text>
                const priceData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.PriceHistory.PriceHistory.Select(p => new { 
                    date = p.Date.ToString("yyyy-MM-dd"), 
                    close = p.Close 
                })));
                
                const dates = priceData.map(d => d.date);
                const prices = priceData.map(d => d.close);
                </text>
            }
            else
            {
                <text>
                const priceData = [];
                const dates = [];
                const prices = [];
                </text>
            }

            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Kapanış Fiyatı (@Model.Symbol)',
                        data: prices,
                        borderColor: 'rgb(75, 192, 192)',
                        backgroundColor: 'rgba(75, 192, 192, 0.1)',
                        tension: 0.1,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: false,
                            title: {
                                display: true,
                                text: 'Fiyat (TL)'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Tarih'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        }
                    }
                }
            });
        }
    </script>
}

<style>
    #priceChart {
        max-height: 400px;
    }
    
    .progress {
        height: 8px;
    }
    
    #symbol option[style*="display: none"] {
        display: none !important;
    }
</style> 